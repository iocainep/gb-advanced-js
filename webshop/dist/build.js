(()=>{"use strict";var t={d:(e,o)=>{for(var s in o)t.o(o,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:o[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};t.d({},{T:()=>e}),Vue.component("goods-list",{props:["goods"],template:'\n        <div class="goods-list">\n            <goods-item v-for="goodEntity in goods" :goodProp="goodEntity"></goods-item>\n        </div>\n        '}),Vue.component("goods-item",{props:["goodProp"],methods:{async addToCart(){const t=JSON.stringify(this.goodProp);this.$root.fetchBasket.push(this.goodProp),this.$root.writeLog(this.goodProp.id_product,"addtocart");const o={method:"POST",mode:"cors",headers:{"Content-Type":"application/json;charset=utf-8"},body:t};await fetch(`${e}/addToCart`,o),this.$root.basketSum+=this.goodProp.price}},template:'\n      <div \n        class="goods-item" \n        :id="goodProp.id_product">\n        <h3 class="goods-item-name">\n            {{goodProp.product_name}}\n        </h3>\n        <img :src="goodProp.picture">\n        <p class="goods-item-price">\n          {{goodProp.price}}\n        </p>\n        <button\n          type="button"\n          @click = "addToCart()"\n          class="add-to-cart"\n          :id="goodProp.id_product"\n          >\n          Добавить в корзину\n        </button>\n      </div>\n    '}),Vue.component("search",{data:function(){return{searchLine:""}},template:'\n        <div class="search-wrapper">\n          <input \n            @keydown.enter="searchGoods" \n            type="text" \n            v-model="searchLine" \n            placeholder="Введите строку поиска"/>\n          <button \n            class="search-button"\n            type="button"\n            @click="searchGoods">\n            Искать\n          </button>\n        </div>\n      ',methods:{searchGoods(){const t=new RegExp(this.searchLine,"i");this.$root.filteredGoods=this.$root.filter((e=>t.test(e.product_name)))}}}),Vue.component("basket-list",{props:["basketItems"],template:'\n        <div class="basket-list">\n          <basket-item \n          v-bind:key="index"\n          v-bind:basket-item-id="item.id_product"\n          v-for="(item,index) in basketItems"\n          :item="item"\n          :index="index">\n          </basket-item>\n        </div>\n      '}),Vue.component("basket-item",{props:["item","index"],template:'\n        <div class="basket-item">\n          <h3 \n            class="basket-item__title">\n          {{item.product_name}}\n          </h3>\n          <img \n            :src="item.picture">\n          <p \n            class="basket-item__price">\n          {{item.price}}\n          </p>\n          <button \n            @click="removeFromCart(index)" \n            class="remove-from-cart">\n            Удалить из корзины\n          </button>\n        </div>\n    ',methods:{async removeFromCart(t){this.$root.basketSum-=this.$root.fetchBasket[t].price,this.$root.fetchBasket.splice(t,1),this.$root.writeLog(this.item.id_product,"removefromcart");const o={method:"POST",mode:"cors",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify({index:t})};await fetch(`${e}/removeFromCart`,o)}}});const e="http://localhost:3000",o=new Date,s=new Vue({el:"#app",data:{goods:[],filteredGoods:[],basketItems:[],fetchBasket:[],basketSum:0,searchLine:""},methods:{async getProducts(){const t=await fetch(`${e}/catalogData`);if(t.ok){const e=await t.json();this.goods=e,this.filteredGoods=e}else alert("Ошибка при соединении с сервером")},async showCart(){const t=await fetch(`${e}/cartData`);if(t.ok){const e=await t.json();this.basketItems=e,this.fetchBasket=e}else alert("Ошибка при соединении с сервером");this.basketItems.forEach((t=>{this.basketSum+=t.price}))},async writeLog(t,s){const n={action:s,id:t,time:o},i={method:"POST",mode:"cors",headers:{"Content-Type":"application/json;charset=utf-8"},body:JSON.stringify(n)},a=await fetch(`${e}/writeLog`,i);console.log(a)},async getCartSum(){this.basketItems.forEach((t=>{s.basketSum+=t.price}))}},async mounted(){await this.getProducts()},beforeMount(){this.showCart(),this.getCartSum()}})})();